From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Paul <paul@technove.co>
Date: Wed, 27 Oct 2021 13:10:28 -0500
Subject: [PATCH] Use normal context, which is already lazy


diff --git a/src/main/java/io/papermc/paper/util/CollisionUtil.java b/src/main/java/io/papermc/paper/util/CollisionUtil.java
index b16e65fa8be40f6c938c8c183c9bca7c13acc9e2..b2e2d6ee25a88f9c8f6769c6774643220f9c148b 100644
--- a/src/main/java/io/papermc/paper/util/CollisionUtil.java
+++ b/src/main/java/io/papermc/paper/util/CollisionUtil.java
@@ -519,7 +519,7 @@ public final class CollisionUtil {
                             if ((edgeCount != 1 || blockData.shapeExceedsCube()) && (edgeCount != 2 || blockData.getBlock() == Blocks.MOVING_PISTON)) {
                                 mutablePos.set(blockX, blockY, blockZ);
                                 if (collisionShape == null) {
-                                    collisionShape = new LazyEntityCollisionContext(entity);
+                                    collisionShape = CollisionContext.of(entity); // Aeroplane - use normal context, we already tore it apart
                                 }
                                 VoxelShape voxelshape2 = blockData.getCollisionShape(getter, mutablePos, collisionShape);
                                 if (voxelshape2 != Shapes.empty()) {
@@ -611,6 +611,8 @@ public final class CollisionUtil {
         }
     }
 
+    // Aeroplane start - unneeded
+    /*
     public static final class LazyEntityCollisionContext extends EntityCollisionContext {
 
         private CollisionContext delegate;
@@ -650,6 +652,8 @@ public final class CollisionUtil {
             return this.getDelegate().canStandOnFluid(state, fluid);
         }
     }
+     */
+    // Aeroplane end
 
     private CollisionUtil() {
         throw new RuntimeException();
